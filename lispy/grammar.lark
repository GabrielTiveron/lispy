?start : expr

?value : SYMBOL -> symbol
			 | STRING ->string
       | BOOL -> bool

?atom	 : value
       | number
			 | "if" expr expr expr -> condition


assign : atom "=" expr ->assign

?binop : SYMBOL atom atom -> binop
			 | "[" atom SYMBOL atom "]" -> binop_alt
       | SYMBOL atom      -> letop

number : INT
       | FLOAT

?list  : atom
       | "(" list* ")"->list

?expr  : binop
       | list
       | "let""(" expr expr ")" -> let
       | ":""let""{" assign+ "}" "in" "(" expr ")" -> let_alt
       | "lambda""(" expr expr ")" -> lambdas
			 | ("'"expr | "quote""(" expr ")") -> quote

// Terminais
SYMBOL.0  : /[-!+\/*@$%^&~<>?|\\\w=]+/
STRING.4    : /"[^"\\]*(\\[^\n\t\r\f][^"\\]*)*"/
INT.1     : /-?\d+/
FLOAT.2   : /-?\d+\.\d+/
BOOL.3	    : /#[tf]/

%ignore /\s+/
%ignore /;[^\n]*/
