?start : expr+

?value : SYMBOL -> symbol
			 | STRING ->string
       | BOOL -> bool

?atom	 : value
       | number
			 | "if" expr expr expr -> condition
			 | condition_alt2

?condition_alt2 : ":if" expr "then:" expr condition_alt2* -> condition_alt
							 | ":elif" expr "then:" expr condition_alt2*
							 | ":else:" expr -> else_alt


assign : atom "=" expr ->assign

?binop : SYMBOL atom atom -> binop
			 | "[" list SYMBOL list "]" -> binop_alt
			 | "[" list "(" atom ")" list "]" -> binop_alt2
       | SYMBOL atom      -> letop

number : INT
       | FLOAT

?list  : atom
       | "(" list* ")" -> list

?expr  : binop
       | list
       | "let""(" expr expr ")" -> let
       | ":let""{" assign+ "}" "in" "(" expr ")" -> let_alt
       | "lambda""(" expr expr ")" -> lambdas
			 | ("'"expr | "quote""(" expr ")") -> quote
       | lambda_alt

?lambda_alt : ":defn" SYMBOL SYMBOL+ ":"  expr -> lambda_alt
            | ":fn" SYMBOL+ ":" "(" expr ")" -> lambda_alt2

// Terminais
SYMBOL.0  : /[-!+\/*@$%^&~<>?|\\\w=]+/
STRING.4    : /"[^"\\]*(\\[^\n\t\r\f][^"\\]*)*"/
INT.1     : /-?\d+/
FLOAT.2   : /-?\d+\.\d+/
BOOL.3	    : /#[tf]/

%ignore /\s+/
%ignore /;[^\n]*/
